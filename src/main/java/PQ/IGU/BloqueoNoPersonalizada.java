/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PQ.IGU;

import PQ.LOGICA.ControladoraLogica;
import PQ.LOGICA.TarjetaNoPersonalizada;
import PQ.LOGICA.TarjetaPersonalizada;
import PQ.LOGICA.controladoraLogicaNoPersonalizadas;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elias Jaramillo
 */
public class BloqueoNoPersonalizada extends javax.swing.JFrame {

    controladoraLogicaNoPersonalizadas control = null;

    /**
     * Creates new form BloqueoPersonalizada
     */
    public BloqueoNoPersonalizada() {

        control = new controladoraLogicaNoPersonalizadas();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTabla = new javax.swing.JTable();
        btnBloquear = new javax.swing.JButton();
        btnBloquear1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Bloqueo de tarjetas");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        tbTabla.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        tbTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbTabla.setRequestFocusEnabled(false);
        tbTabla.setRowHeight(40);
        jScrollPane2.setViewportView(tbTabla);

        btnBloquear.setText("Bloquear");
        btnBloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquearActionPerformed(evt);
            }
        });

        btnBloquear1.setText("Activar");
        btnBloquear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBloquear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBloquear1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnBloquear, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnBloquear1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquearActionPerformed
        //CONTROLO QUE LA TABLA NO ESTE VACIA
        if (tbTabla.getRowCount() > 0) {
            //CONTROLO QUE UNA FILA ESTE SELECIONADA A UN REGISTRO
            if (tbTabla.getSelectedRow() != -1) {

                //OBTENGO EL ID DE LA MASCOTA A ELIMINAR
                int numeroTarjeta = Integer.parseInt(String.valueOf((tbTabla.getValueAt(tbTabla.getSelectedRow(), 0))));
                //LLAMO AL METODO BORRAR
                control.bloquearTarjetaNoPersonalizada(numeroTarjeta);

                mostrarMensajes("Tarjeta bloqueada Correctamente", "info", "BORRADO");
                cargarTabla();

            } else {
                mostrarMensajes("NO SELECIONÓ NINGUNA TARJETA", "Error", "ERROR");

            }

        } else {
            mostrarMensajes("NO HAY NADA PARA ELIMINAR", "info", "RECORDATORIO");

        }


    }//GEN-LAST:event_btnBloquearActionPerformed

    public void mostrarMensajes(String mensaje, String tipo, String titulo) {

        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("info")) {
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        } else if (tipo.equals("Error")) {

            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);

        }

        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);

    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        cargarTabla();

    }//GEN-LAST:event_formWindowOpened

    private void btnBloquear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquear1ActionPerformed
        
        //CONTROLO QUE LA TABLA NO ESTE VACIA
        if (tbTabla.getRowCount() > 0) {
            //CONTROLO QUE UNA FILA ESTE SELECIONADA A UN REGISTRO
            if (tbTabla.getSelectedRow() != -1) {

                //OBTENGO EL ID DE LA MASCOTA A ELIMINAR
                int numeroTarjeta = Integer.parseInt(String.valueOf((tbTabla.getValueAt(tbTabla.getSelectedRow(), 0))));
                //LLAMO AL METODO BORRAR
                control.ActivarTarjetaNoPersonalizada(numeroTarjeta);

                mostrarMensajes("TARJETA ACTIVADA CORRECTAMENTE", "info", "RECORDATORIO");
                cargarTabla();

            } else {
                mostrarMensajes("NO SELECIONÓ NINGUNA TARJETA", "Error", "ERROR");

            }

        } else {
            mostrarMensajes("NO HAY NADA PARA ELIMINAR", "info", "RECORDATORIO");

        }
        
        
        
     
    }//GEN-LAST:event_btnBloquear1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBloquear;
    private javax.swing.JButton btnBloquear1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbTabla;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        //definimos el modelo que queremos que tenga la tabla
        DefaultTableModel tabla;
        tabla = new DefaultTableModel() {

            //Para que no se pueden editar las columnas
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String titulos[] = {"ID", "ESTADO", "NUMERO TARJETA","SALDO"};
        tabla.setColumnIdentifiers(titulos);
        //carga de los datos de la base de datos
        List<TarjetaNoPersonalizada> listaTarjetas = control.traerTarjetasNoPersonalizadas();
        //recorrer la lista y mostrar cada uno de los elementos 
        if (listaTarjetas != null) {
            for (TarjetaNoPersonalizada tarjeta : listaTarjetas) {
                Object[] objects = {tarjeta.getId_nopersonalizada(),tarjeta.getEstado(),tarjeta.getNumeroTarjeta(),tarjeta.getSaldo()};
                tabla.addRow(objects);
            }
        }
        tbTabla.setModel(tabla);
    }
}
